!function(){"use strict";var e=document.querySelector(".profile__edit-button"),t=document.querySelector(".profile__add-button"),r=document.querySelector(".popup__form_type_edit"),n=document.querySelector(".popup__form_type_add-image"),o=document.querySelector(".popup__form_type_profile-image"),i=document.querySelector(".profile__user"),u=document.querySelector(".profile__profession"),a=document.querySelector(".profile__image"),c=document.querySelector(".popup__button_type_delete"),l=document.querySelector(".popup__button_type_edit"),s=document.querySelector(".popup__button_type_profile-image"),f=document.querySelector(".profile__avatar-overlay"),p=document.querySelector(".popup__create-card-button"),y={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function h(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==d(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==d(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===d(o)?o:String(o)),n)}var o}var m=function(){function e(t,r){var n=t.data,o=t.handleCardClick,i=t.handleDeleteClick,u=t.handleLikeAdd,a=t.handleLikeDelete,c=t.userId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n.name,this._link=n.link,this._template=r,this._id=n._id,this._likesCount=n.likes.length,this._ownerId=n.owner._id,this._user=c,this._handleCardClick=o,this._handleDeleteClick=i,this._handleLikeAdd=u,this._handleLikeDelete=a,this._likesArray=n.likes,this._cardLikes=n.likes.length}var t,r;return t=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._template).content.querySelector(".card").cloneNode(!0)}},{key:"addHeart",value:function(){var e=this._element.querySelector(".card__like-button"),t=this._element.querySelector(".card__like-counter");e.classList.add("card__like-button_on"),t.textContent=this._likesArray.length}},{key:"removeHeart",value:function(){var e=this._element.querySelector(".card__like-button"),t=this._element.querySelector(".card__like-counter");e.classList.remove("card__like-button_on"),t.textContent=this._likesArray.length,0===this._cardLikes&&(t.textContent="")}},{key:"_deleteButton",value:function(){this._element.querySelector(".card__delete-button").closest(".card").remove()}},{key:"updateLikes",value:function(e){return this._likesArray=e}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".card__like-button").addEventListener("click",(function(){e._likesArray.some((function(t){return t._id===e._user}))?e._handleLikeDelete({id:e._id}):e._handleLikeAdd({id:e._id})})),this._element.querySelector(".card__delete-button").addEventListener("click",(function(){e._handleDeleteClick({id:e._id})})),this._element.querySelector(".card__image").addEventListener("click",(function(){return e._handleCardClick({name:e._name,link:e._link})})),this._ownerId!==this._user&&this._element.querySelector(".card__delete-button").remove()}},{key:"generateCard",value:function(){var e=this;this._element=this._getTemplate(),this._setEventListeners();var t=this._element.querySelector(".card__image");return this._element.querySelector(".card__title").textContent=this._name,t.src=this._link,t.setAttribute("alt",this._name),this._cardLikes>0?this._element.querySelector(".card__like-counter").textContent=this._cardLikes:this._element.querySelector(".card__like-counter").textContent="",this._likesArray.some((function(t){return t._id===e._user}))?this._element.querySelector(".card__like-button").classList.add("card__like-button_on"):this._element.querySelector(".card__like-button").classList.remove("card__like-button_on"),this._element}}])&&h(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function v(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,S(n.key),n)}}function b(e,t,r){return(t=S(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function S(e){var t=function(e,t){if("object"!==_(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==_(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===_(t)?t:String(t)}var k=function(){function e(t,r){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),b(this,"_setEventListeners",(function(){n._inputList.forEach((function(e){e.addEventListener("input",(function(){n._checkInputValidity(e),n._toggleButtonState()}))}))})),b(this,"enableValidation",(function(){n._formElement.addEventListener("submit",(function(e){e.preventDefault()})),n._setEventListeners()})),this._formElement=t,this._inputSelector=r.inputSelector,this._submitButtonSelector=r.submitButtonSelector,this._inactiveButtonClass=r.inactiveButtonClass,this._inputErrorClass=r.inputErrorClass,this._errorClass=r.errorClass,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}var t,r;return t=e,(r=[{key:"_showInputError",value:function(e,t){var r=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),r.classList.add(this._errorClass),r.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t),t.value=""}))}}])&&v(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function E(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==g(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==g(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===g(o)?o:String(o)),n)}var o}var w=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,r;return t=e,(r=[{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){t.target.classList.contains("popup_opened")||t.target.classList.contains("popup__close-button")?e.close():t.target.closest(".popup")||e.close()}))}}])&&E(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function L(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==O(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==O(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===O(o)?o:String(o)),n)}var o}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},j.apply(this,arguments)}function C(e,t){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},C(e,t)}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}var q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&C(e,t)}(u,e);var t,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(n);if(o){var r=P(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===O(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t,r=e.popupSelector,n=e.handleFormSubmit,o=e.submitButton;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,r))._handleFormSubmit=n,t._inputList=t._popupElement.querySelectorAll(".popup__input"),t._formElement=t._popupElement.querySelector(".popup__form"),t._submitButton=o,t}return t=u,(r=[{key:"close",value:function(){j(P(u.prototype),"close",this).call(this),this.renderLoading(!1),this._formElement.reset()}},{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"renderLoading",value:function(e){this._submitButton.textContent=e?"Guardando...":this._submitButton.dataset.textcontent}},{key:"setEventListeners",value:function(){var e=this;j(P(u.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e.renderLoading(!0),e._handleFormSubmit(e._getInputValues())}))}}])&&L(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),u}(w);function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function T(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==R(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==R(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===R(o)?o:String(o)),n)}var o}function B(){return B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=A(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},B.apply(this,arguments)}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}function A(e){return A=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},A(e)}var U=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(u,e);var t,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=A(n);if(o){var r=A(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===R(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t,r=e.popupSelector,n=e.handleFormSubmit,o=e.submitButton;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,r))._handleFormSubmit=n,t._submitButton=o,t}return t=u,(r=[{key:"close",value:function(){B(A(u.prototype),"close",this).call(this),this.renderLoading(!1)}},{key:"setSubmitAction",value:function(e){this._handleFormSubmit=e}},{key:"renderLoading",value:function(e){this._submitButton.textContent=e?"Borrando...":this._submitButton.dataset.textcontent}},{key:"setEventListeners",value:function(){var e=this;B(A(u.prototype),"setEventListeners",this).call(this),this._popupElement.querySelector(".popup__button").addEventListener("click",(function(t){t.preventDefault(),e.renderLoading(!0),e._handleFormSubmit()}))}}])&&T(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),u}(w);function x(e){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},x(e)}function D(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==x(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==x(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===x(o)?o:String(o)),n)}var o}function V(){return V="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=N(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},V.apply(this,arguments)}function F(e,t){return F=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},F(e,t)}function N(e){return N=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},N(e)}var H=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&F(e,t)}(u,e);var t,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=N(n);if(o){var r=N(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===x(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._image=t._popupElement.querySelector(".popup__image"),t._title=t._popupElement.querySelector(".popup__caption"),t}return t=u,(r=[{key:"open",value:function(e){var t=e.link,r=e.name;this._image.src=t,this._title.textContent=r,this._image.setAttribute("alt",r),V(N(u.prototype),"open",this).call(this)}}])&&D(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),u}(w);function G(e){return G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},G(e)}function J(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==G(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==G(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===G(o)?o:String(o)),n)}var o}var z=function(){function e(t,r){var n=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=n,this._renderer=o,this._container=document.querySelector(r)}var t,r;return t=e,(r=[{key:"renderer",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"addCards",value:function(e){this._container.prepend(e)}}])&&J(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function M(e){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},M(e)}function K(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==M(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==M(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===M(o)?o:String(o)),n)}var o}var Q=function(){function e(t){var r=t.userName,n=t.userOcupation,o=t.userAvatar,i=t.userId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=r,this._userOcupation=n,this._userId=i,this._userAvatar=o}var t,r;return t=e,(r=[{key:"getUserInfo",value:function(){return{userName:this._userName.textContent,userOcupation:this._userOcupation.textContent}}},{key:"setUserInfo",value:function(e){var t=e.username,r=e.userocupation;this._userName.textContent=t,this._userOcupation.textContent=r}},{key:"setUserAvatar",value:function(e){this._userAvatar.src=e}}])&&K(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function W(e){return W="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},W(e)}function X(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==W(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==W(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===W(o)?o:String(o)),n)}var o}var Y=new(function(){function e(t){var r=t.baseUrl,n=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=r,this._headers=n}var t,r;return t=e,(r=[{key:"_returnRes",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getCardList",value:function(){var e=this;return fetch(this._baseUrl+"/cards",{method:"GET",headers:this._headers}).then((function(t){return e._returnRes(t)}))}},{key:"getUserInfo",value:function(){var e=this;return fetch(this._baseUrl+"/users/me",{method:"GET",headers:this._headers}).then((function(t){return e._returnRes(t)}))}},{key:"setUserInfo",value:function(e){var t=this,r=e.name,n=e.about;return fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:r,about:n})}).then((function(e){return t._returnRes(e)})).catch((function(e){return console.log(e)}))}},{key:"addCard",value:function(e){var t=this,r=e.name,n=e.link;return fetch(this._baseUrl+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:r,link:n})}).then((function(e){return t._returnRes(e)}))}},{key:"removeCard",value:function(e){var t=this;return fetch(this._baseUrl+"/cards/"+e,{method:"DELETE",headers:this._headers}).then((function(e){return t._returnRes(e)}))}},{key:"setUserAvatar",value:function(e){var t=this;return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((function(e){return t._returnRes(e)}))}},{key:"addLike",value:function(e){var t=this;return fetch(this._baseUrl+"/cards/likes/"+e,{method:"PUT",headers:this._headers}).then((function(e){return t._returnRes(e)}))}},{key:"removeLike",value:function(e){var t=this;return fetch(this._baseUrl+"/cards/likes/"+e,{method:"DELETE",headers:this._headers}).then((function(e){return t._returnRes(e)}))}}])&&X(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}())({baseUrl:"https://around.nomoreparties.co/v1/web_es_cohort_04",headers:{authorization:"7b89216e-03f6-4244-8235-930eb464c231","Content-Type":"application/json"}}),Z=new k(r,y),$=new k(n,y),ee=new k(o,y);Z.enableValidation(),$.enableValidation(),ee.enableValidation();var te=new H(".popup_preview_image");te.setEventListeners();var re=new q({popupSelector:".popup_edit_profile",handleFormSubmit:function(e){Y.setUserInfo({name:e.name,about:e.about}).then((function(e){ne.setUserInfo({username:e.name,userocupation:e.about}),re.close()})).catch((function(e){return console.log(e)}))},submitButton:l});re.setEventListeners();var ne=new Q({userName:i,userOcupation:u,userAvatar:a});e.addEventListener("click",(function(){re.open(),Z.resetValidation()})),Y.getUserInfo().then((function(e){ne.setUserInfo({username:e.name,userocupation:e.about}),ne.setUserAvatar(e.avatar),ne.userId=e._id})).then((function(){Y.getCardList().then((function(e){var r=new z({items:e,renderer:function(e){var t=ue(e);r.addCards(t)}},".cards__container");r.renderer();var n=new q({popupSelector:".popup_add_card",handleFormSubmit:function(e){Y.addCard({name:e.title,link:e["image-link"]}).then((function(e){var t=ue(e);r.addItem(t),n.close()})).catch((function(e){return console.log(e)}))},submitButton:p});n.setEventListeners(),t.addEventListener("click",(function(){n.open(),$.resetValidation()}))})).catch((function(e){return console.log(e)}))})).catch((function(e){return console.log(e)}));var oe=new q({popupSelector:".popup_image_profile",handleFormSubmit:function(e){var t=e["image-link"];Y.setUserAvatar(t).then((function(){ne.setUserAvatar(t),oe.close()})).catch((function(e){return console.log(e)}))},submitButton:s});oe.setEventListeners(),f.addEventListener("click",(function(){oe.open(),ee.resetValidation()}));var ie=new U({popupSelector:".popup_delete_card",submitButton:c});function ue(e){var t=new m({data:e,handleCardClick:function(e){var t=e.name,r=e.link;te.open({name:t,link:r})},handleDeleteClick:function(e){var r=e.id;ie.open(),ie.setSubmitAction((function(){Y.removeCard(r).then((function(){ie.close(),t._deleteButton()})).catch((function(e){return console.log(e)}))}))},handleLikeAdd:function(e){var r=e.id;Y.addLike(r).then((function(e){t.updateLikes(e.likes),t.addHeart()})).catch((function(e){return console.log(e)}))},handleLikeDelete:function(e){var r=e.id;Y.removeLike(r).then((function(e){t.updateLikes(e.likes),t.removeHeart()})).catch((function(e){return console.log(e)}))},userId:ne.userId},".card-template");return t.generateCard()}ie.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,